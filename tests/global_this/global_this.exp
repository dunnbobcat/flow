Error ------------------------------------------------------------------------------------------------------ test.js:1:1

Cannot resolve name `myWeirdWindowScopedGlobal`. [cannot-resolve-name]

   1| myWeirdWindowScopedGlobal; // cannot-resolve-name
      ^^^^^^^^^^^^^^^^^^^^^^^^^


Error ----------------------------------------------------------------------------------------------------- test.js:2:12

Cannot get `globalThis.myWeirdGlobalScopedGlobal` because property `myWeirdGlobalScopedGlobal` is missing in namespace
globalThis. [prop-missing]

   2| globalThis.myWeirdGlobalScopedGlobal; // prop-missing
                 ^^^^^^^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------------------------------ test.js:3:1

Cannot cast `window.myWeirdWindowScopedGlobal` to empty because string [1] is incompatible with empty [2].
[incompatible-cast]

   test.js:3:1
   3| window.myWeirdWindowScopedGlobal as empty; // error: string ~> empty
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   globals.js:2:30
   2|   myWeirdWindowScopedGlobal: string;
                                   ^^^^^^ [1]
   test.js:3:37
   3| window.myWeirdWindowScopedGlobal as empty; // error: string ~> empty
                                          ^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ test.js:7:1

Cannot cast `window.myGlobal` to empty because `Opaque` [1] is incompatible with empty [2]. [incompatible-cast]

   test.js:7:1
   7| window.myGlobal as empty; // error
      ^^^^^^^^^^^^^^^

References:
   globals.js:7:25
   7| declare const myGlobal: Opaque;
                              ^^^^^^ [1]
   test.js:7:20
   7| window.myGlobal as empty; // error
                         ^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ test.js:8:1

Cannot cast `globalThis.myGlobal` to empty because `Opaque` [1] is incompatible with empty [2]. [incompatible-cast]

   test.js:8:1
   8| globalThis.myGlobal as empty; // error
      ^^^^^^^^^^^^^^^^^^^

References:
   globals.js:7:25
   7| declare const myGlobal: Opaque;
                              ^^^^^^ [1]
   test.js:8:24
   8| globalThis.myGlobal as empty; // error
                             ^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:10:1

Cannot cast `Array` to `Node` because: [incompatible-cast]
 - Either class `Array` [1] is incompatible with `React.Element` [2].
 - Or class `Array` [1] is incompatible with `React.Portal` [3].
 - Or property `@@iterator` is missing in class `Array` [1] but exists in `$Iterable` [4].

   test.js:10:1
    10| Array as globalThis.React.Node; // error
        ^^^^^

References:
   <BUILTINS>/core.js:951:15
   951| declare class Array<T> extends $ReadOnlyArray<T> {
                      ^^^^^ [1]
   <BUILTINS>/react.js:21:5
    21|   | React$Element<any>
            ^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:22:5
    22|   | React$Portal
            ^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:23:5
    23|   | Iterable<?React$Node>;
            ^^^^^^^^^^^^^^^^^^^^^ [4]



Found 6 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
